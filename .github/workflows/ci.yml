name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: llvm-tools-preview rustfmt
        
      - name: Install cargo-nextest
        uses: taiki-e/install-action@nextest
        
      - name: Install llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Install just
        uses: taiki-e/install-action@just
        
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2

      - name: Build cortex-ai
        working-directory: ./cortex-ai
        run: just build
      
      - name: Run tests
        working-directory: ./cortex-ai
        run: just test-ci

      - name: Run doctests
        working-directory: ./cortex-ai
        run: just test-doc
        
      - name: Check formatting
        working-directory: ./cortex-ai
        run: just fmt
        
      - name: Check linting
        working-directory: ./cortex-ai
        run: just lint
        
      - name: Generate coverage report
        working-directory: ./cortex-ai
        run: just coverage

      - name: Upload results to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./target/llvm-cov-target/lcov.info
          token: ${{ secrets.CODECOV_TOKEN }}

  publish:
    name: Publish
    needs: test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'  
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        
      - name: Publish cortex-ai
        run: cargo publish -p cortex-ai --token ${CRATES_TOKEN}
        env:
          CRATES_TOKEN: ${{ secrets.CRATES_TOKEN }}